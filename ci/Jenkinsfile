pipeline {
    agent any
     environment {
        CHROME_BIN='/usr/bin/google-chrome-stable'
        }
    stages {
        stage('checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: '169bae99-5e7b-4942-8431-81dbc58b40e4', url: 'https://github.com/Alpaca00/squash-opponent.git']]])
            }
        }
        stage('build-test') {
            steps {
                git branch: 'main', credentialsId: 'squash_opponent', url: 'https://github.com/Alpaca00/squash-opponent.git'
                script {
                    sh 'apt-get update && apt-get install -y wget'
                    sh 'wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
                    echo '"deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list'
                    sh 'apt-get update'
                    sh 'apt-get install -y google-chrome-stable xvfb'
                    sh 'pip install pipenv'
                    sh 'pipenv install'
                    sh 'pipenv install --dev'
                    sh 'pipenv run pytest -s -H tests/tests_ui/test_smoke/test_regression/'
                }
            }
        }
        stage('Build image') {
          steps {
              withDockerRegistry(credentialsId: 'opponent_docker', url: 'https://registry.hub.docker.com ') {
                sh 'docker build -t alpaca00/opponent:latest .'
                sh 'docker login -u $DOCKER_USERNAME --password $DOCKER_PASSWORD'
                sh 'docker push alpaca00/opponent:latest'
                sh 'docker image rm alpaca00/opponent'
                }
                script {
                    echo 'Done.'
                    }
                }
            }
        stage('finish') {
            steps {
                echo 'The job has been finished.'

            }
        }
    }
}
